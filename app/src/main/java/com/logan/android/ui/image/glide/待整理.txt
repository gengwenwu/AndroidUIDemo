1，Glide重要用法：
    Glide.with(context).load(url).into(imageView)

    with()
        方法的参数可以是Activity、Fragment等。将用于图片加载的生命周期，比如传入的是activity，那么在activity销毁时将对相关图片资源进行回收。
        with参数优先级：Fragment > Activity > Context

    load()
        方法的参数可以为String、Uri、File、资源ID等。

    into()
        方法的参数可以是ImageView，Target、图片的宽高。

2，缓存策略
    requestOptions.skipMemoryCache(true) //不加入内存缓存，默认会加入
                  .diskCacheStrategy(DiskCacheStrategy.NONE); //不加入磁盘缓存

    磁盘缓存策略有以下几种：
        DiskCacheStrategy.NONE： 表示不缓存任何内容。
        DiskCacheStrategy.DATA： 表示只缓存原始图片(对应Glide 3中的 DiskCacheStrategy.SOURCE)。
        DiskCacheStrategy.RESOURCE： 表示只缓存转换过后的图片(对应Glide 3中的 DiskCacheStrategy.RESULT)。
        DiskCacheStrategy.ALL ： 表示既缓存原始图片，也缓存转换过后的图片。
        DiskCacheStrategy.AUTOMATIC： 表示让Glide根据图片资源智能地选择使用哪一种缓存策略（默认选项）。

    另外再补充一点：
        (1)，网络图片缓存是根据url地址进行存储的，对于同一张图片但其url地址不同(可变动)的情况，则无法起到缓存作用。
          这个时候可以通过自定义Url来应对这种情况，具体方案请参考这里的“高级技巧”小节。


======== 文章思路整理整理
可以参考郭霖glide系列，他那个是3.x，从4.x版本写起

一，基础篇(入门用法)
    1，常用用法
    2，Target
    3，Transform
    4，特例、解决方案

二，进阶偏
    1，Glide执行流程
    2，Glide到缓存机制
    3，Glide的回调与监听 [submit()，preload(), submit()，downloadOnly()]
    4，Glide的Transform
    5，Glide 自定义模块
    6，实现带进度的Glide图片加载功能

Glide节省内存用法？
封装？


